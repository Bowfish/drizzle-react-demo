{"ast":null,"code":"import _classCallCheck from \"/home/damian/src/drizzle-react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/damian/src/drizzle-react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/damian/src/drizzle-react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/damian/src/drizzle-react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/damian/src/drizzle-react-demo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/damian/src/drizzle-react-demo/src/containers/User.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { AccountData } from 'drizzle-react-components';\n\nvar User =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(User, _Component);\n\n  function User(props, context) {\n    var _this;\n\n    _classCallCheck(this, User);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(User).call(this, props));\n    _this.contracts = context.drizzle.contracts;\n    _this.web3 = context.drizzle.web3;\n\n    _this.contracts.UserFactory.methods.setUserData(_this.web3.utils.toHex('Damian'), _this.web3.utils.toHex('Hischier'), _this.web3.utils.toHex('1000.100.10.1'), _this.web3.utils.toHex('20.05.1970')).send();\n\n    _this.getUserDataKey = _this.contracts.UserFactory.methods.getUserData.cacheCall(_this.props.accounts[0]);\n    return _this;\n  }\n\n  _createClass(User, [{\n    key: \"render\",\n    value: function render() {\n      // If the data isn't here yet, show loading\n      if (!(this.getUserDataKey in this.props.UserFactory.getUserData)) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        });\n      } // If the data is here, get it and display it\n\n\n      var userData = this.props.UserFactory.getUserData[this.getUserDataKey].value;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Account Data\"), React.createElement(AccountData, {\n        accountIndex: \"0\",\n        units: \"ether\",\n        precision: \"3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"User Data\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"First Name  : \", this.web3.utils.hexToUtf8(userData[0])), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Last Name   : \", this.web3.utils.hexToUtf8(userData[1])), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Email       : \", this.web3.utils.hexToUtf8(userData[2])), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, \"Birth Date  : \", this.web3.utils.hexToUtf8(userData[3])))));\n    }\n  }]);\n\n  return User;\n}(Component);\n\nUser.propTypes = {\n  store: PropTypes.object.isRequired\n};\nUser.contextTypes = {\n  drizzle: PropTypes.object\n};\nexport default User;","map":{"version":3,"sources":["/home/damian/src/drizzle-react-demo/src/containers/User.js"],"names":["React","Component","PropTypes","AccountData","User","props","context","contracts","drizzle","web3","UserFactory","methods","setUserData","utils","toHex","send","getUserDataKey","getUserData","cacheCall","accounts","userData","value","hexToUtf8","propTypes","store","object","isRequired","contextTypes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { AccountData } from 'drizzle-react-components'\n\nclass User extends Component {\n\n  constructor(props, context) {\n    super(props)\n\n    this.contracts = context.drizzle.contracts\n    this.web3 = context.drizzle.web3\n\n    this.contracts.UserFactory.methods.setUserData(\n      this.web3.utils.toHex('Damian'),\n      this.web3.utils.toHex('Hischier'),\n      this.web3.utils.toHex('1000.100.10.1'),\n      this.web3.utils.toHex('20.05.1970')\n    ).send()\n\n    this.getUserDataKey = this.contracts.UserFactory.methods.getUserData.cacheCall(\n        this.props.accounts[0]\n    )\n  }\n\n  render() {\n    // If the data isn't here yet, show loading\n    if(!(this.getUserDataKey in this.props.UserFactory.getUserData)) {\n      return (\n        <div>\n        </div>\n      )\n    }\n\n    // If the data is here, get it and display it\n    const userData = this.props.UserFactory.getUserData[this.getUserDataKey].value\n\n    return (\n      <div>\n        <h3>Account Data</h3>\n        <AccountData accountIndex=\"0\" units=\"ether\" precision=\"3\" />\n        <div>\n          <div>\n            <br />\n          </div>\n          <div>\n            <h3>User Data</h3>\n            <p>First Name  : {this.web3.utils.hexToUtf8(userData[0])}</p>\n            <p>Last Name   : {this.web3.utils.hexToUtf8(userData[1])}</p>\n            <p>Email       : {this.web3.utils.hexToUtf8(userData[2])}</p>\n            <p>Birth Date  : {this.web3.utils.hexToUtf8(userData[3])}</p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nUser.propTypes = {\n  store: PropTypes.object.isRequired\n}\n\nUser.contextTypes = {\n  drizzle: PropTypes.object\n}\n\nexport default User\n"]},"metadata":{},"sourceType":"module"}